load("@bazel_skylib//rules:write_file.bzl", "write_file")
load("@bazel_skylib//rules:diff_test.bzl", "diff_test")
load("@io_bazel_stardoc//stardoc:stardoc.bzl", "stardoc")

_DOC_SRCS = [
    "experimental.doc",
    "xcodeproj",
]

[
    stardoc(
        name = file + "_doc",
        out = file + ".md",
        input = "//xcodeproj:%s.bzl" % file,
        tags = ["no-sandbox"],  # https://github.com/bazelbuild/stardoc/issues/112
        deps = ["//xcodeproj/internal:xcodeproj_internal"],
    )
    for file in _DOC_SRCS
]

# Help developers who get a red CI result by telling them how to fix it
_failure_message = "\nPlease update the docs by running\n    bazel run //docs:update"

[
    diff_test(
        name = "check_" + file,
        failure_message = _failure_message,
        file1 = file + ".md",
        file2 = "rules-%s.md" % file.replace(".doc", ""),
    )
    for file in _DOC_SRCS
]

test_suite(
    name = "diff_test",
    tests = ["check_" + file for file in _DOC_SRCS],
)

write_file(
    name = "gen_update",
    out = "update.sh",
    content = [
        "#!/usr/bin/env bash",
        "set -euo pipefail",
    ] + [
        'cp -fv docs/{src}.md "$BUILD_WORKSPACE_DIRECTORY/docs/rules-{dst}.md"'.format(
            src = file,
            dst = file.replace(".doc", ""),
        )
        for file in _DOC_SRCS
    ],
)

sh_binary(
    name = "update",
    srcs = ["update.sh"],
    data = [file + ".md" for file in _DOC_SRCS],
)
